/*==============================
=            COLORS            =
==============================*/

/*----------  PRIMARY  ----------*/
$colorPrimary_1: #101010;
$colorPrimary_2: #f95b17;

/*----------  SECONDARY  ----------*/
$colorSecondary_1: #ebb7f5;
$colorSecondary_2: #b8ffc3;
$colorSecondary_3: #fff8b8;

/*----------  GREYSCALE  ----------*/
$colorGreyscale_1: #101010;
$colorGreyscale_2: #434649;
$colorGreyscale_3: #888c8f;
$colorGreyscale_4: #cdced0;
$colorGreyscale_5: #f5f5f5;
$colorGreyscale_6: #ffffff;

/*----------  SYSTEM PALETTE  ----------*/
$colorError: #eb392e;
$colorSuccess: #22af5c;

/*=====  End of COLORS  ======*/

/*=============================
=            FONTS            =
=============================*/

@font-face {
  font-family: Inter-Bold;
  src: url(../../../assets/fonts/Inter/Inter-Bold.ttf);
}
@font-face {
  font-family: Inter-Regular;
  src: url(../../../assets/fonts/Inter/Inter-Regular.ttf);
}

$font_1_bold: Inter-Bold;
$font_1_regular: Inter-Regular;

/*=====  End of FONTS  ======*/

/*=================================
=            TEXT SIZE            =
=================================*/
/*----------  H1  ----------*/
$h1_textsize_desktop: 64px;
$h1_textsize_mobile: 40px;

/*----------  H2  ----------*/
$h2_textsize_desktop: 48px;
$h2_textsize_mobile: 32px;

/*----------  H3  ----------*/
$h3_textsize_desktop: 32px;
$h3_textsize_mobile: 28px;

/*----------  H4  ----------*/
$h4_textsize_desktop: 24px;
$h4_textsize_mobile: 24px;

/*----------  H5  ----------*/
$h5_textsize_desktop: 20px;
$h5_textsize_mobile: 20px;

/*----------  H6  ----------*/
$h6_textsize_desktop: 18px;
$h6_textsize_mobile: 18px;

/*----------  PARAGRAPH QUOTE  ----------*/
$paragraphQuote_textsize_desktop: 24px;

/*----------  PARAGRAPH BIG  ----------*/
$paragraphBig_textsize_desktop: 18px;

/*----------  PARAGRAPH MEDIUM  ----------*/
$paragraphMedium_textsize_desktop: 16px;

/*----------  PARAGRAPH SMALL  ----------*/
$paragraphSmall_textsize_desktop: 14px;

/*----------  PARAGRAPH TINY  ----------*/
$paragraphTiny_textsize_desktop: 11px;

/*----------  LINK  ----------*/
$linkBig_textsize_desktop: 18px;
$linkMedium_textsize_desktop: 16px;
$linkSmall_textsize_desktop: 14px;

/*=====  End of TEXT SIZE  ======*/

/*============================
=            GRID            =
============================*/

$grid_width: 64px; // COL WIDTH
$grid_gap: 40px; // GUTTER WIDTH
$grid_col: 12; // COL DEFAULT

$gap_tablet: 32px; // PADDING LEFT & RIGHT TABLET
$grid_tablet: calc(100% - (#{$gap_tablet} * 2)); // GRID TABLET

$gap_mobile: 16px; // PADDING LEFT & RIGHT MOBILE
$grid_mobile: calc(100% - (#{$gap_mobile} * 2)); // GRID MOBILE

@function calcGrid($numCol: 12, $addGap: 0) {
  $gap: calc(#{$addGap} * #{$grid_gap});
  $grid_gap: calc(#{$grid_gap} * 11 / 12);
  @return calc(
    (
        (#{$grid_width} * #{$numCol}) +
          (
            (#{$grid_gap} * #{$grid_col} / (#{$grid_col} - 1)) *
              (#{$numCol} - 1)
          )
      ) + #{$gap}
  );
}

$breakPoint_tablet: calc(calcGrid() + (#{$gap_tablet} * 2));
$breakPoint_mobile: 700px;

// MIXIN RESPONSIVE
@mixin styleResponsive($size: "mobile") {
  // BASIC SIZE
  @if $size == "desktop" {
    @supports (container-type: inline-size) {
      @container section (width > #{$breakPoint_tablet}) {
        @content;
      }
    }
    @supports not (container-type: inline-size) {
      @media (width > #{$breakPoint_tablet}) {
        @content;
      }
    }
  } @else if $size == "tablet" {
    @supports (container-type: inline-size) {
      @container section (#{$breakPoint_mobile} <= width <= #{$breakPoint_tablet}) {
        @content;
      }
    }
    @supports not (container-type: inline-size) {
      @media (#{$breakPoint_mobile} <= width <= #{$breakPoint_tablet}) {
        @content;
      }
    }
  } @else if $size == "mobile" {
    @supports (container-type: inline-size) {
      @container section (width < #{$breakPoint_mobile}) {
        @content;
      }
    }
    @supports not (container-type: inline-size) {
      @media (width <= #{$breakPoint_mobile}) {
        @content;
      }
    }
  }

  // SPECIFIC SIZE
  @if $size == "wider-mobile" {
    @supports (container-type: inline-size) {
      @container section (width > #{$breakPoint_mobile}) {
        @content;
      }
    }
    @supports not (container-type: inline-size) {
      @media (width >= #{$breakPoint_mobile}) {
        @content;
      }
    }
  }
}

// MIXIN GRID
@mixin styleGrid($numCol: 12, $addGap: 0, $containerName: section) {
  margin-right: auto;
  margin-left: auto;

  @include styleResponsive("desktop") {
    width: calcGrid($numCol, $addGap);
  }

  @include styleResponsive("tablet") {
    width: $grid_tablet;
  }

  @include styleResponsive("mobile") {
    width: $grid_mobile;
  }
}

// MIXIN CONTAINER QUERIES
@mixin containerInit($containerName: section, $containerType: inline-size) {
  container-type: #{$containerType};
  container-name: #{$containerName};
}

section,
header,
footer {
  &:not(.customContainer) {
    @include containerInit();
  }
}

/*=====  End of GRID  ======*/

/*===============================
=            QUERIES            =
===============================*/

// MEDIA
@media ($breakPoint_mobile <= width <= $breakPoint_tablet) and (orientation: portrait) {
}

@media ($breakPoint_mobile <= width <= $breakPoint_tablet) and (orientation: landscape) {
}

@media ($breakPoint_mobile <= width <= $breakPoint_tablet) {
}

@media (width <= $breakPoint_mobile) {
}

// CONTAINER QUERIES
@container section (width > #{$breakPoint_tablet}) {
}

@container section (#{$breakPoint_mobile} <= width <= #{$breakPoint_tablet}) {
}

@container section (width <= #{$breakPoint_mobile}) {
}

/*=====  End of QUERIES  ======*/

/* ------------------------------------------------- */
/* ********************* MIXIN ********************* */
/* ------------------------------------------------- */

/*----------  HEADING  ----------*/
@mixin styleH($hx, $color: $colorGreyscale_1, $font: $font_1_bold) {
  @if $hx== "h1" {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h1_textsize_desktop;
      line-height: 1.3;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h1_textsize_mobile;
      line-height: 1.4;
    }
  } @else if $hx == "h2" {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h2_textsize_desktop;
      line-height: 1.3;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h2_textsize_mobile;
      line-height: 1.4;
    }
  } @else if $hx == "h3" {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h3_textsize_desktop;
      line-height: 1.3;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h3_textsize_mobile;
      line-height: 1.4;
    }
  } @else if $hx == "h4" {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h4_textsize_desktop;
      line-height: 1.3;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h4_textsize_mobile;
      line-height: 1.4;
    }
  } @else if $hx == "h5" {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h5_textsize_desktop;
      line-height: 1.1;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h5_textsize_mobile;
      line-height: 1.4;
    }
  } @else if $hx == "h6" {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h6_textsize_desktop;
      line-height: 1.1;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h6_textsize_mobile;
      line-height: 1.4;
    }
  }

  color: $color;
  font-family: $font, sans-serif;
}

/*----------  PARAGRAPH  ----------*/
@mixin styleP($px, $color: $colorGreyscale_1, $font: $font_1_regular) {
  @if $px == "quote" {
    font-size: $paragraphQuote_textsize_desktop;
    line-height: 1.1;
  } @else if $px == "big" {
    font-size: $paragraphBig_textsize_desktop;
    line-height: 1.3;
  } @else if $px == "medium" {
    font-size: $paragraphMedium_textsize_desktop;
    line-height: 1.3;
  } @else if $px == "small" {
    font-size: $paragraphSmall_textsize_desktop;
    line-height: 1.3;
  } @else if $px == "tiny" {
    font-size: $paragraphTiny_textsize_desktop;
    line-height: 1.3;
  }

  color: $color;
  font-family: $font;
}

/*----------  LINK  ----------*/
@mixin styleA($ax: "big", $color: $colorGreyscale_2) {
  display: inline-flex;
  position: relative;
  align-items: center;
  text-decoration: none;
  font-family: $font_1_bold, sans-serif;

  @if $ax == "big" {
    font-size: $linkBig_textsize_desktop;
    line-height: 1.1;
  } @else if $ax == "medium" {
    font-size: $linkMedium_textsize_desktop;
    line-height: 1.1;
  } @else if $ax == "small" {
    font-size: $linkSmall_textsize_desktop;
    line-height: 1.1;
  }

  color: $color;
}

/*----------  HOVER  ----------*/
@mixin styleHover() {
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }
}

/* ----------------------------------------------------- */
/* ********************* END MIXIN ********************* */
/* ----------------------------------------------------- */
